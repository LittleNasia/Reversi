#pragma once
#include "board.h"



namespace linear_regression
{
	constexpr float side_to_move_weights[board::rows * board::cols] = { 0.302211, 0.109039, 0.0328632, 0.0322592, 0.0322591, 0.0328632, 0.109039, 0.302211, 0.109039, -0.0223899, -0.0578594, -0.03794, -0.0379398, -0.0578595, -0.0223898, 0.109039, 0.0328625, -0.0578599, -0.0445993, -0.0358952, -0.0358952, -0.044599, -0.05786, 0.0328628, 0.0322591, -0.0379392, -0.0358954, -0.0393484, -0.0393143, -0.0358953, -0.0379391, 0.032259, 0.0322588, -0.0379393, -0.0358953, -0.0393484, -0.039325, -0.0358951, -0.0379392, 0.0322586, 0.0328629, -0.0578598, -0.044599, -0.0358953, -0.0358952, -0.044599, -0.0578599, 0.0328629, 0.109039, -0.0223895, -0.0578595, -0.0379398, -0.0379397, -0.0578596, -0.0223895, 0.109039, 0.302211, 0.109039, 0.0328632, 0.0322586, 0.0322589, 0.0328633, 0.109039, 0.302211, };

	constexpr float opposite_side_weights[board::rows * board::cols] = { -0.109642, 0.0107295, 0.0258656, 0.0280129, 0.0280127, 0.0258655, 0.0107295, -0.109643, 0.0107303, -0.137416, -0.0251255, -0.0255064, -0.0255064, -0.0251254, -0.137416, 0.0107301, 0.0258649, -0.0251259, 0.0013523, -0.0334058, -0.0334059, 0.00135235, -0.0251261, 0.0258651, 0.0280126, -0.0255056, -0.0334058, -0.00914994, -0.00911372, -0.033406, -0.0255055, 0.0280125, 0.0280125, -0.0255057, -0.0334057, -0.00915001, -0.00912518, -0.0334058, -0.0255055, 0.0280123, 0.0258651, -0.0251258, 0.00135258, -0.0334057, -0.0334057, 0.00135254, -0.0251261, 0.0258651, 0.01073, -0.137416, -0.0251256, -0.0255062, -0.0255063, -0.0251255, -0.137416, 0.0107301, -0.109643, 0.0107295, 0.0258657, 0.0280124, 0.0280124, 0.0258657, 0.0107294, -0.109643, };

	constexpr float available_moves_weights[board::rows * board::cols] = { 0.329496, 0.0999931, 0.0573382, 0.0625798, 0.0625797, 0.0573382, 0.0999931, 0.329496, 0.0999937, 0.0280827, 0.0433268, 0.0374939, 0.037494, 0.0433266, 0.0280828, 0.0999935, 0.0573376, 0.0433264, 0.0538436, 0.0415778, 0.0415777, 0.0538436, 0.0433263, 0.0573378, 0.0625796, 0.0374944, 0.0415779, 0.015625, -0.015625, 0.0415778, 0.0374945, 0.0625795, 0.0625793, 0.0374944, 0.041578, 0.015625, -0.015625, 0.0415779, 0.0374944, 0.0625793, 0.0573379, 0.0433264, 0.053844, 0.0415776, 0.0415777, 0.0538438, 0.0433263, 0.0573378, 0.0999934, 0.0280829, 0.0433266, 0.0374939, 0.0374939, 0.0433265, 0.0280829, 0.0999935, 0.329497, 0.099993, 0.0573384, 0.0625792, 0.0625795, 0.0573384, 0.099993, 0.329497, };

	constexpr float bias = -0.0462871;

	//there can be 0 to 64 taken squares on a board, for a total of 65 possibilities
	constexpr int num_possible_squares = 65;

	//piece square values for:
	//side to move pieces
	//opposite side pieces
	//legal moves
	constexpr int num_weights = 64 * 3;

	inline float weights[num_possible_squares][num_possible_squares][num_weights];

	void load_weights();

	int16_t evaluate(const board& b);
}
